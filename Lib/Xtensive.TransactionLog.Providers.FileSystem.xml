<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xtensive.TransactionLog.Providers.FileSystem</name>
    </assembly>
    <members>
        <member name="T:Xtensive.TransactionLog.Providers.FileSystem.FileSystemLogProvider">
            <summary>
            Implements <see cref="T:Xtensive.TransactionLog.Providers.ILogProvider"/> for simple access to file system.
            </summary>
        </member>
        <member name="M:Xtensive.TransactionLog.Providers.FileSystem.FileSystemLogProvider.FolderExists(System.String)">
            <summary>
            Checks if specified folder exists.
            </summary>
            <param name="name">Full name (with path) of folder.</param>
            <returns><see langword="True"/> if specified folder exists, otherwise gets <see langword="false"/>.</returns>
        </member>
        <member name="M:Xtensive.TransactionLog.Providers.FileSystem.FileSystemLogProvider.CreateFolder(System.String)">
            <summary>
            Creates new folder.
            </summary>
            <param name="name">Full name (with path) of folder.</param>
        </member>
        <member name="M:Xtensive.TransactionLog.Providers.FileSystem.FileSystemLogProvider.GetFileStream(System.String,System.IO.FileMode)">
            <summary>
            Gets file's stream for read or write.
            </summary>
            <param name="name">Full name (with path) of file.</param>
            <param name="mode"><see cref="T:System.IO.FileMode"/> for get <see cref="T:System.IO.Stream"/>.</param>
            <returns><see cref="T:System.IO.Stream"/> for specified file and <see cref="T:System.IO.FileMode"/>.</returns>
        </member>
        <member name="M:Xtensive.TransactionLog.Providers.FileSystem.FileSystemLogProvider.GetFolderFiles(System.String)">
            <summary>
            Gets list of files in specified folder.
            </summary>
            <param name="name">Full name (with path) of folder.</param>
            <returns>Array of <see cref="T:System.String"/> with names of files in specified folder.</returns>
        </member>
        <member name="M:Xtensive.TransactionLog.Providers.FileSystem.FileSystemLogProvider.DeleteFolder(System.String)">
            <summary>
            Deletes folder.
            </summary>
            <param name="name">Full name (with path) of folder.</param>
        </member>
        <member name="M:Xtensive.TransactionLog.Providers.FileSystem.FileSystemLogProvider.DeleteFile(System.String)">
            <summary>
            Deletes file.
            </summary>
            <param name="name">Full name (with path) of file.</param>
        </member>
        <member name="M:Xtensive.TransactionLog.Providers.FileSystem.FileSystemLogProvider.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Xtensive.TransactionLog.Providers.FileSystem.FileSystemLogProvider"/>.
            </summary>
            <param name="baseFolder">Path to folder on local system where to create files and/or folders for <see cref="T:Xtensive.TransactionLog.TransactionLog`1"/>.</param>
        </member>
        <member name="T:Xtensive.TransactionLog.Providers.FileSystem.Resources.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Xtensive.TransactionLog.Providers.FileSystem.Resources.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Xtensive.TransactionLog.Providers.FileSystem.Resources.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Xtensive.TransactionLog.Providers.FileSystem.Resources.Strings.ExFolderNameConflictsWithFile">
            <summary>
              Looks up a localized string similar to Unable to initialize provider at {0} because of file with the same name already exists..
            </summary>
        </member>
    </members>
</doc>
