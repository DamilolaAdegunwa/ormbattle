<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Xtensive.Storage.Indexing.Model</name>
  </assembly>
  <members>
    <member name="T:Xtensive.Storage.Indexing.Model.ColumnInfo">
      <summary>
            Column.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.NodeBase`1">
      <summary>
            A base class for all nodes in storage model.
            </summary>
      <typeparam name="TParent">The type of the parent node.</typeparam>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.NodeBase`1.#ctor(`0,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.NodeBase`1" /> class.
            </summary>
      <param name="parent">The parent.</param>
      <param name="name">The name.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ColumnInfo.ValidateState">
      <exception cref="T:Xtensive.Storage.Indexing.Model.ValidationException">Validation error.</exception>
      <summary>
            Validates the state (i.e. checks everything except nested properties).
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ColumnInfo.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ColumnInfo.#ctor(Xtensive.Storage.Indexing.Model.TableInfo,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.ColumnInfo" /> class.
            </summary>
      <param name="table">The parent table.</param>
      <param name="name">The name.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ColumnInfo.#ctor(Xtensive.Storage.Indexing.Model.TableInfo,System.String,Xtensive.Storage.Indexing.Model.TypeInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.ColumnInfo" /> class.
            </summary>
      <param name="table">The parent table.</param>
      <param name="name">The column name.</param>
      <param name="type">Type of the column.</param>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.ColumnInfo.Type">
      <summary>
            Gets or sets the type of the column.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.ColumnInfo.DefaultValue">
      <summary>
            Gets or sets the default column value.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.ColumnInfoCollection">
      <summary>
            Column collection.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.NodeCollectionBase`2">
      <summary>
            An abstract base class for any collection of storage model nodes.
            </summary>
      <typeparam name="TNode">The type of the node.</typeparam>
      <typeparam name="TParent">The type of the parent node.</typeparam>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.NodeCollectionBase`2.#ctor(Xtensive.Modelling.Node,System.String)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ColumnInfoCollection.#ctor(Xtensive.Modelling.Node)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.ColumnInfoCollection" /> class.
            </summary>
      <param name="parent">The parent.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.ColumnInfoRef`1">
      <summary>
            An abstract base class for all columns refs.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.Ref`2">
      <summary>
            The reference to model node.
            </summary>
      <typeparam name="TTarget">The type of the target node.</typeparam>
      <typeparam name="TParent">The type of the parent node.</typeparam>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.Ref`2.#ctor(`1)">
      <inheritdoc />
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Ref`2.Value">
      <summary>
            Gets or sets referenced node.
            </summary>
      <exception cref="T:System.NotSupportedException">Value is already initialized.</exception>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ColumnInfoRef`1.#ctor(`0)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.ColumnInfoRef`1" /> class.
            </summary>
      <param name="parent">The parent index.</param>
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ColumnInfoRef`1.#ctor(`0,Xtensive.Storage.Indexing.Model.ColumnInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.ColumnInfoRef`1" /> class.
            </summary>
      <param name="parent">The parent index.</param>
      <param name="column">The column.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.ValidationException">
      <summary>
            Describes errors detected during 
            <see cref="M:Xtensive.Modelling.Node.Validate" />.<see cref="T:Xtensive.Modelling.Node" /> execution.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ValidationException.#ctor">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ValidationException.#ctor(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ValidationException.#ctor(System.String,System.Exception)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ValidationException.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.ValidationException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="nodePath">The path of the invalid node.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Deserializes the instance of <see cref="T:Xtensive.Storage.Indexing.Model.ValidationException" /> class.
            </summary>
      <param name="info">Serialization info to get the deserialized data from.</param>
      <param name="context">Streaming context.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes the instance of <see cref="T:Xtensive.Storage.Indexing.Model.ValidationException" /> class.
            </summary>
      <param name="info">Serialization info to store serialization data in.</param>
      <param name="context">Streaming context.</param>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.ValidationException.NodePath">
      <summary>
            Gets the path of the node which validation has failed.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.ForeignKeyCollection">
      <summary>
            Foreign key collection.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ForeignKeyCollection.#ctor(Xtensive.Storage.Indexing.Model.TableInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.ForeignKeyCollection" /> class.
            </summary>
      <param name="table">The table.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.ForeignKeyColumnCollection">
      <summary>
            A collection of <see cref="T:Xtensive.Storage.Indexing.Model.ForeignKeyColumnRef" /> instances.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ForeignKeyColumnCollection.Set(Xtensive.Storage.Indexing.Model.IndexInfo)">
      <summary>
            Replaces all column references to references to columns of 
            specified <paramref name="source" /> index.
            </summary>
      <param name="source">The index to use.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ForeignKeyColumnCollection.#ctor(Xtensive.Modelling.Node,System.String)">
      <inheritdoc />
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.ForeignKeyColumnRef">
      <summary>
            References to foreign key column.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ForeignKeyColumnRef.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ForeignKeyColumnRef.#ctor(Xtensive.Storage.Indexing.Model.ForeignKeyInfo)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ForeignKeyColumnRef.#ctor(Xtensive.Storage.Indexing.Model.ForeignKeyInfo,Xtensive.Storage.Indexing.Model.ColumnInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.ForeignKeyColumnRef" /> class.
            </summary>
      <param name="parent">The foreign key.</param>
      <param name="column">The column.</param>
      <inheritdoc />
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.ForeignKeyInfo">
      <summary>
            Foreign key.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ForeignKeyInfo.ValidateState">
      <exception cref="T:Xtensive.Storage.Indexing.Model.ValidationException">Validations errors.</exception>
      <summary>
            Validates the state (i.e. checks everything except nested properties).
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ForeignKeyInfo.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ForeignKeyInfo.Initialize">
      <summary>
            Initializes this instance.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Xtensive.Modelling.Node.CreateNesting" /> has returned <see langword="null" />.</exception>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ForeignKeyInfo.#ctor(Xtensive.Storage.Indexing.Model.TableInfo,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.ForeignKeyInfo" /> class.
            </summary>
      <param name="parent">The parent table.</param>
      <param name="name">The name of foreign key.</param>
      <inheritdoc />
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.ForeignKeyInfo.PrimaryKey">
      <summary>
            Gets or sets the foreign index.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.ForeignKeyInfo.ForeignKeyColumns">
      <summary>
            Gets foreign key columns.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.ForeignKeyInfo.OnRemoveAction">
      <summary>
            Gets or sets the "on remove" action.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.ForeignKeyInfo.OnUpdateAction">
      <summary>
            Gets or sets the "on update" action.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.FullTextColumnRef">
      <summary>
            Reference to full-text column.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.FullTextColumnRef.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.FullTextColumnRef.#ctor(Xtensive.Storage.Indexing.Model.FullTextIndexInfo)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.FullTextColumnRef.#ctor(Xtensive.Storage.Indexing.Model.FullTextIndexInfo,Xtensive.Storage.Indexing.Model.ColumnInfo)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.FullTextColumnRef.#ctor(Xtensive.Storage.Indexing.Model.FullTextIndexInfo,Xtensive.Storage.Indexing.Model.ColumnInfo,System.String)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.FullTextColumnRef.#ctor(Xtensive.Storage.Indexing.Model.FullTextIndexInfo,Xtensive.Storage.Indexing.Model.ColumnInfo,System.String,Xtensive.Storage.Indexing.Model.ValueColumnRef)">
      <inheritdoc />
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.FullTextColumnRefCollection">
      <summary>
            A collection of <see cref="T:Xtensive.Storage.Indexing.Model.FullTextColumnRef" /> instances.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.FullTextColumnRefCollection.#ctor(Xtensive.Storage.Indexing.Model.FullTextIndexInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.FullTextColumnRefCollection" /> class.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.FullTextIndexInfo">
      <summary>
            Full-text index.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.FullTextIndexInfo.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.FullTextIndexInfo.Initialize">
      <summary>
            Initializes this instance.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Xtensive.Modelling.Node.CreateNesting" /> has returned <see langword="null" />.</exception>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.FullTextIndexInfo.ValidateState">
      <exception cref="T:Xtensive.Storage.Indexing.Model.ValidationException">
      </exception>
      <summary>
            Validates the state (i.e. checks everything except nested properties).
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.FullTextIndexInfo.#ctor(Xtensive.Storage.Indexing.Model.TableInfo,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.FullTextIndexInfo" /> class.
            </summary>
      <param name="parent">The parent table.</param>
      <param name="name">The index.</param>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.FullTextIndexInfo.Columns">
      <summary>
            Gets columns.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.FullTextIndexInfoCollection">
      <summary>
            A collection of full-text indexes.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.FullTextIndexInfoCollection.#ctor(Xtensive.Storage.Indexing.Model.TableInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.FullTextIndexInfoCollection" /> class.
            </summary>
      <param name="table">The table.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.IncludedColumnRef">
      <summary>
            References to included column.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.IncludedColumnRef.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.IncludedColumnRef.#ctor(Xtensive.Storage.Indexing.Model.SecondaryIndexInfo)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.IncludedColumnRef.#ctor(Xtensive.Storage.Indexing.Model.SecondaryIndexInfo,Xtensive.Storage.Indexing.Model.ColumnInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.IncludedColumnRef" /> class.
            </summary>
      <param name="parent">The parent index.</param>
      <param name="column">The referenced column.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.IncludedColumnRefCollection">
      <summary>
            A collection of <see cref="T:Xtensive.Storage.Indexing.Model.IncludedColumnRef" /> instances.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.IncludedColumnRefCollection.#ctor(Xtensive.Storage.Indexing.Model.SecondaryIndexInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.IncludedColumnRefCollection" /> class.
            </summary>
      <param name="parent">The parent index.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.IndexInfo">
      <summary>
            The base abstract class for all indexes.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.IndexInfo.Initialize">
      <summary>
            Initializes this instance.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Xtensive.Modelling.Node.CreateNesting" /> has returned <see langword="null" />.</exception>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.IndexInfo.#ctor(Xtensive.Storage.Indexing.Model.TableInfo,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.IndexInfo" /> class.
            </summary>
      <param name="parent">The parent table.</param>
      <param name="name">The index.</param>
      <inheritdoc />
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.IndexInfo.IsUnique">
      <summary>
            Gets a value indicating whether this instance is unique.
            </summary>
      <exception cref="T:System.NotSupportedException">Already initialized.</exception>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.IndexInfo.IsPrimary">
      <summary>
            Gets a value indicating whether this instance is primary.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.IndexInfo.KeyColumns">
      <summary>
            Gets key columns.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.KeyColumnRef">
      <summary>
            References to key column.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.KeyColumnRef`1">
      <summary>
            References to key column.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.KeyColumnRef`1.ValidateState">
      <exception cref="T:Xtensive.Storage.Indexing.Model.ValidationException">Invalid <see cref="P:Xtensive.Storage.Indexing.Model.KeyColumnRef`1.Direction" /> value 
            (<see cref="F:Xtensive.Core.Direction.None" />).</exception>
      <summary>
            Validates the state (i.e. checks everything except nested properties).
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.KeyColumnRef`1.#ctor(`0)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.KeyColumnRef`1.#ctor(`0,Xtensive.Storage.Indexing.Model.ColumnInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.KeyColumnRef`1" /> class.
            </summary>
      <param name="parent">The parent index.</param>
      <param name="column">The referenced column.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.KeyColumnRef`1.#ctor(`0,Xtensive.Storage.Indexing.Model.ColumnInfo,Xtensive.Core.Direction)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.KeyColumnRef`1" /> class.
            </summary>
      <param name="parent">The parent index.</param>
      <param name="column">The referenced column.</param>
      <param name="direction">The direction.</param>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.KeyColumnRef`1.Direction">
      <summary>
            Gets or sets the column direction.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.KeyColumnRef.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.KeyColumnRef.#ctor(Xtensive.Storage.Indexing.Model.IndexInfo)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.KeyColumnRef.#ctor(Xtensive.Storage.Indexing.Model.IndexInfo,Xtensive.Storage.Indexing.Model.ColumnInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.KeyColumnRef" /> class.
            </summary>
      <param name="parent">The parent index.</param>
      <param name="column">The referenced column.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.KeyColumnRef.#ctor(Xtensive.Storage.Indexing.Model.IndexInfo,Xtensive.Storage.Indexing.Model.ColumnInfo,Xtensive.Core.Direction)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.KeyColumnRef" /> class.
            </summary>
      <param name="parent">The parent index.</param>
      <param name="column">The referenced column.</param>
      <param name="direction">The direction.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.KeyColumnRefCollection">
      <summary>
            A collection of <see cref="T:Xtensive.Storage.Indexing.Model.KeyColumnRef" /> instances.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.KeyColumnRefCollection.#ctor(Xtensive.Storage.Indexing.Model.IndexInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.KeyColumnRefCollection" /> class.
            </summary>
      <param name="parent">The parent.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.Log">
      <summary>
            Log for this namespace.
            </summary>
    </member>
    <member name="F:Xtensive.Storage.Indexing.Model.Log.Name">
      <summary>
            Gets the name of this log.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.PrimaryIndexInfo">
      <summary>
            Primary index.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.PrimaryIndexInfo.PopulateValueColumns">
      <summary>
            Populates <see cref="P:Xtensive.Storage.Indexing.Model.PrimaryIndexInfo.ValueColumns" /> collection by
            including all the columns except <see cref="P:Xtensive.Storage.Indexing.Model.IndexInfo.KeyColumns" />
            into it.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.PrimaryIndexInfo.ValidateState">
      <exception cref="T:Xtensive.Storage.Indexing.Model.ValidationException">Validation error.</exception>
      <summary>
            Validates the state (i.e. checks everything except nested properties).
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.PrimaryIndexInfo.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.PrimaryIndexInfo.Initialize">
      <summary>
            Initializes this instance.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Xtensive.Modelling.Node.CreateNesting" /> has returned <see langword="null" />.</exception>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.PrimaryIndexInfo.#ctor(Xtensive.Storage.Indexing.Model.TableInfo,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.PrimaryIndexInfo" /> class.
            </summary>
      <param name="table">The parent table.</param>
      <param name="name">The index name.</param>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.PrimaryIndexInfo.ValueColumns">
      <summary>
            Gets value columns.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.PrimaryKeyColumnRef">
      <summary>
            References to key column.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.PrimaryKeyColumnRef.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.PrimaryKeyColumnRef.#ctor(Xtensive.Storage.Indexing.Model.SecondaryIndexInfo)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.PrimaryKeyColumnRef.#ctor(Xtensive.Storage.Indexing.Model.SecondaryIndexInfo,Xtensive.Storage.Indexing.Model.ColumnInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.PrimaryKeyColumnRef" /> class.
            </summary>
      <param name="parent">The parent index.</param>
      <param name="column">The referenced column.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.PrimaryKeyColumnRef.#ctor(Xtensive.Storage.Indexing.Model.SecondaryIndexInfo,Xtensive.Storage.Indexing.Model.ColumnInfo,Xtensive.Core.Direction)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.PrimaryKeyColumnRef" /> class.
            </summary>
      <param name="parent">The parent index.</param>
      <param name="column">The referenced column.</param>
      <param name="direction">The direction.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.PrimaryKeyColumnRefCollection">
      <summary>
            A collection of <see cref="T:Xtensive.Storage.Indexing.Model.PrimaryKeyColumnRef" /> instances.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.PrimaryKeyColumnRefCollection.#ctor(Xtensive.Storage.Indexing.Model.SecondaryIndexInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.PrimaryKeyColumnRefCollection" /> class.
            </summary>
      <param name="parent">The parent.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.ReferentialAction">
      <summary>
            Referential integrity maintenance actions.
            </summary>
    </member>
    <member name="F:Xtensive.Storage.Indexing.Model.ReferentialAction.None">
      <summary>
            Do nothing to maintain referential integrity.
            </summary>
    </member>
    <member name="F:Xtensive.Storage.Indexing.Model.ReferentialAction.Default">
      <summary>
            The same as <see cref="F:Xtensive.Storage.Indexing.Model.ReferentialAction.Restrict" />.
            </summary>
    </member>
    <member name="F:Xtensive.Storage.Indexing.Model.ReferentialAction.Restrict">
      <summary>
            Restricts primary key update \ removal when it is referenced by some foreign key.
            </summary>
    </member>
    <member name="F:Xtensive.Storage.Indexing.Model.ReferentialAction.Cascade">
      <summary>
            Cascades primary key update \ removal to its foreign key.
            </summary>
    </member>
    <member name="F:Xtensive.Storage.Indexing.Model.ReferentialAction.Clear">
      <summary>
            Clears the foreign key on its primary key update \ removal.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.SecondaryIndexInfo">
      <summary>
            Secondary index.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.SecondaryIndexInfo.PopulatePrimaryKeyColumns">
      <summary>
            Populates <see cref="P:Xtensive.Storage.Indexing.Model.SecondaryIndexInfo.PrimaryKeyColumns" /> collection by
            copying them from primary index.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.SecondaryIndexInfo.ValidateState">
      <exception cref="T:Xtensive.Storage.Indexing.Model.ValidationException">Empty secondary key columns collection.</exception>
      <summary>
            Validates the state (i.e. checks everything except nested properties).
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.SecondaryIndexInfo.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.SecondaryIndexInfo.Initialize">
      <summary>
            Initializes this instance.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Xtensive.Modelling.Node.CreateNesting" /> has returned <see langword="null" />.</exception>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.SecondaryIndexInfo.#ctor(Xtensive.Storage.Indexing.Model.TableInfo,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.SecondaryIndexInfo" /> class.
            </summary>
      <param name="table">The parent table.</param>
      <param name="name">The index name.</param>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.SecondaryIndexInfo.PrimaryKeyColumns">
      <summary>
            Gets value columns.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.SecondaryIndexInfo.IncludedColumns">
      <summary>
            Gets included columns.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.SecondaryIndexInfoCollection">
      <summary>
            A collection of secondary indexes.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.SecondaryIndexInfoCollection.#ctor(Xtensive.Storage.Indexing.Model.TableInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.SecondaryIndexInfoCollection" /> class.
            </summary>
      <param name="table">The table.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.SequenceInfo">
      <summary>
            Sequence.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.SequenceInfo.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.SequenceInfo.ValidateState">
      <exception cref="T:Xtensive.Storage.Indexing.Model.ValidationException">
        <c>ValidationException</c>.</exception>
      <summary>
            Validates the state (i.e. checks everything except nested properties).
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.SequenceInfo.#ctor(Xtensive.Storage.Indexing.Model.StorageInfo,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.SequenceInfo" /> class.
            </summary>
      <param name="parent">The parent.</param>
      <param name="name">The name.</param>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.SequenceInfo.Seed">
      <summary>
            Gets or sets the start value.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.SequenceInfo.Increment">
      <summary>
            Gets or sets the increment.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.SequenceInfo.Type">
      <summary>
            Gets or sets the type.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.SequenceInfo.Current">
      <summary>
            Gets or sets the current sequence value.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.SequenceInfoCollection">
      <summary>
            The collection of <see cref="T:Xtensive.Storage.Indexing.Model.SequenceInfo" /> instances.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.SequenceInfoCollection.#ctor(Xtensive.Storage.Indexing.Model.StorageInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.SequenceInfoCollection" /> class.
            </summary>
      <param name="parent">The storage.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.StorageInfo">
      <summary>
            Storage schema.
            </summary>
    </member>
    <member name="F:Xtensive.Storage.Indexing.Model.StorageInfo.DefaultName">
      <summary>
            Default <see cref="T:Xtensive.Storage.Indexing.Model.StorageInfo" /> node name.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.StorageInfo.Initialize">
      <summary>
            Initializes this instance.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Xtensive.Modelling.Node.CreateNesting" /> has returned <see langword="null" />.</exception>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.StorageInfo.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.StorageInfo.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.StorageInfo" /> class.
            </summary>
      <param name="name">The storage name.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.StorageInfo.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.StorageInfo" /> class.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.StorageInfo.Actions">
      <summary>
            Gets or sets the sequence of actions to log.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.StorageInfo.Tables">
      <summary>
            Gets tables.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.StorageInfo.Sequences">
      <summary>
            Gets sequences.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.TableInfo">
      <summary>
            Table.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TableInfo.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TableInfo.Initialize">
      <summary>
            Initializes this instance.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Xtensive.Modelling.Node.CreateNesting" /> has returned <see langword="null" />.</exception>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TableInfo.#ctor(Xtensive.Storage.Indexing.Model.StorageInfo,System.String)">
      <inheritdoc />
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TableInfo.Columns">
      <summary>
            Gets columns.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TableInfo.PrimaryIndex">
      <summary>
            Gets or sets the primary index.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TableInfo.SecondaryIndexes">
      <summary>
            Gets secondary indexes.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TableInfo.ForeignKeys">
      <summary>
            Gets foreign keys.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TableInfo.FullTextIndexes">
      <summary>
            Gets full-text indexes.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TableInfo.AllIndexes">
      <summary>
            Gets all indexes belongs to the table.
            </summary>
      <returns>
        <see cref="T:Xtensive.Storage.Indexing.Model.IndexInfo" /> iterator.</returns>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.TableInfoCollection">
      <summary>
            A collection of <see cref="T:Xtensive.Storage.Indexing.Model.TableInfo" /> instances.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TableInfoCollection.#ctor(Xtensive.Storage.Indexing.Model.StorageInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.TableInfoCollection" /> class.
            </summary>
      <param name="storage">The storage.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.TypeInfo">
      <summary>
            Type of table column.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.Validate">
      <summary>
            Validates the instance state.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.Clone">
      <summary>
                    Creates a new object that is a copy of the current instance.
                </summary>
      <returns>
                    A new object that is a copy of this instance.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.Equals(Xtensive.Storage.Indexing.Model.TypeInfo)">
      <summary>
                    Indicates whether the current object is equal to another object of the same type.
                </summary>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
                </returns>
      <param name="other">
                    An object to compare with this object.
                </param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.Equals(System.Object)">
      <summary>
                    Indicates whether the current object is equal to another object of the same type.
                </summary>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
                </returns>
      <param name="other">
                    An object to compare with this object.
                </param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.GetHashCode">
      <summary>
                    Serves as a hash function for a particular type. 
                </summary>
      <returns>
                    A hash code for the current <see cref="T:System.Object" />.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.op_Equality(Xtensive.Storage.Indexing.Model.TypeInfo,Xtensive.Storage.Indexing.Model.TypeInfo)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="left">The left.</param>
      <param name="right">The right.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.op_Inequality(Xtensive.Storage.Indexing.Model.TypeInfo,Xtensive.Storage.Indexing.Model.TypeInfo)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="left">The left.</param>
      <param name="right">The right.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.#ctor(System.Type,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.TypeInfo" /> class.
            </summary>
      <param name="type">Underlying data type.</param>
      <param name="nativeType">The native type.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.#ctor(System.Type,System.Nullable{System.Int32},System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.TypeInfo" /> class.
            </summary>
      <param name="type">Underlying data type.</param>
      <param name="length">The length.</param>
      <param name="nativeType">The native type.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.#ctor(System.Type,System.Nullable{System.Int32},System.Globalization.CultureInfo,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.TypeInfo" /> class.
            </summary>
      <param name="type">Underlying data type.</param>
      <param name="length">The length.</param>
      <param name="culture">The culture.</param>
      <param name="nativeType">The native type.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.#ctor(System.Type,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.TypeInfo" /> class.
            </summary>
      <param name="type">Underlying data type.</param>
      <param name="length">The length.</param>
      <param name="scale">The scale.</param>
      <param name="precision">The precision.</param>
      <param name="nativeType">The native type.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.#ctor(System.Type,System.Boolean,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.TypeInfo" /> class.
            </summary>
      <param name="type">Underlying data type.</param>
      <param name="isNullable">Indicates whether type is nullable.</param>
      <param name="nativeType">The native type.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.#ctor(System.Type,System.Boolean,System.Nullable{System.Int32},System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.TypeInfo" /> class.
            </summary>
      <param name="type">Underlying data type.</param>
      <param name="isNullable">Indicates whether type is nullable.</param>
      <param name="length">The length.</param>
      <param name="nativeType">The native type.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.#ctor(System.Type,System.Boolean,System.Nullable{System.Int32},System.Globalization.CultureInfo,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.TypeInfo" /> class.
            </summary>
      <param name="type">Underlying data type.</param>
      <param name="isNullable">Indicates whether type is nullable.</param>
      <param name="length">The length.</param>
      <param name="culture">The culture.</param>
      <param name="nativeType">The native type.</param>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.TypeInfo.#ctor(System.Type,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.TypeInfo" /> class.
            </summary>
      <param name="type">Underlying data type.</param>
      <param name="isNullable">Indicates whether type is nullable.</param>
      <param name="length">The length.</param>
      <param name="scale">The scale.</param>
      <param name="precision">The precision.</param>
      <param name="nativeType">The native type.</param>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TypeInfo.Undefined">
      <summary>
            Gets the <see cref="T:Xtensive.Storage.Indexing.Model.TypeInfo" /> with undefined type.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TypeInfo.IsTypeUndefined">
      <summary>
            Gets a value indicating whether type is undefined.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TypeInfo.Type">
      <summary>
            Gets the type of the data.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TypeInfo.IsNullable">
      <summary>
            Indicates whether <see cref="P:Xtensive.Storage.Indexing.Model.TypeInfo.Type" /> is nullable.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TypeInfo.Length">
      <summary>
            Gets the length.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TypeInfo.Culture">
      <summary>
            Gets the culture.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TypeInfo.Scale">
      <summary>
            Gets the scale.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TypeInfo.Precision">
      <summary>
            Gets the precision.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.TypeInfo.NativeType">
      <summary>
            Gets the native type.
            </summary>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.ValueColumnRef">
      <summary>
            References to value column.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ValueColumnRef.CreateNesting">
      <summary>
            Creates <see cref="P:Xtensive.Modelling.Node.Nesting" /> object describing how this node is nested.
            </summary>
      <returns>New <see cref="P:Xtensive.Modelling.Node.Nesting" /> object.</returns>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ValueColumnRef.#ctor(Xtensive.Storage.Indexing.Model.PrimaryIndexInfo)">
      <inheritdoc />
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ValueColumnRef.#ctor(Xtensive.Storage.Indexing.Model.PrimaryIndexInfo,Xtensive.Storage.Indexing.Model.ColumnInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.ValueColumnRef" /> class.
            </summary>
      <param name="parent">The parent index.</param>
      <param name="column">The referenced column.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.ValueColumnRefCollection">
      <summary>
            A collection of <see cref="T:Xtensive.Storage.Indexing.Model.ValueColumnRef" /> instances.
            </summary>
    </member>
    <member name="M:Xtensive.Storage.Indexing.Model.ValueColumnRefCollection.#ctor(Xtensive.Storage.Indexing.Model.PrimaryIndexInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Xtensive.Storage.Indexing.Model.ValueColumnRefCollection" /> class.
            </summary>
      <param name="parent">The parent index.</param>
    </member>
    <member name="T:Xtensive.Storage.Indexing.Model.Resources.Strings">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings._Culture">
      <summary>
              Looks up a localized string similar to Culture.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.Comma">
      <summary>
              Looks up a localized string similar to , .
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExCanNotFindReferenceToColumnX">
      <summary>
              Looks up a localized string similar to Can not find reference to column "{0}"..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExColumnXContainsBothKeyAndValueCollections">
      <summary>
              Looks up a localized string similar to Column "{0}" contains both key and value collections..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExEmptyColumnsCollection">
      <summary>
              Looks up a localized string similar to Columns collection is empty..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExEmptyKeyColumnsCollection">
      <summary>
              Looks up a localized string similar to KeyColumns collection is empty..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExInvalidDirectionValue">
      <summary>
              Looks up a localized string similar to Invalid Direction value (Direction.None)..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExInvalideIncrementValue">
      <summary>
              Looks up a localized string similar to Increment value must be greater then zero..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExInvalidForeignKeyStructure">
      <summary>
              Looks up a localized string similar to Invalid ForeignKey structure: its column sequence do not match PrimaryKey column sequence..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExInvalidIncludedColumnsCollection">
      <summary>
              Looks up a localized string similar to IncludedColumns collection is invalid..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExInvalidPrimaryKeyColumnsCollection">
      <summary>
              Looks up a localized string similar to PrimaryKeyColumns collection is invalid..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExInvalidPrimaryKeyStructure">
      <summary>
              Looks up a localized string similar to Invalid PrimaryKeyInfo structure: sequence KeyColumns and ValueColumns do not match sequence of all the Columns of the table..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExMoreThenOneIncludedColumnReferenceToColumnX">
      <summary>
              Looks up a localized string similar to IncludedColumns collection contains more then one reference to column "{0}"..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExMoreThenOneKeyColumnReferenceToColumnX">
      <summary>
              Looks up a localized string similar to KeyColumns collection contains more then one reference to column "{0}"..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExMoreThenOneValueColumnReferenceToColumnX">
      <summary>
              Looks up a localized string similar to ValueColumns collection contains more then one reference to column "{0}"..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExPrimaryKeyColumnCanNotBeNullable">
      <summary>
              Looks up a localized string similar to Primary key column can not be nullable..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExReferencedColumnXDoesNotBelongToIndexY">
      <summary>
              Looks up a localized string similar to Referenced column "{0}" does not belong to index "{1}"..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExUndefinedForeignKey">
      <summary>
              Looks up a localized string similar to ForeignKey is undefined..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExUndefinedPrimaryKey">
      <summary>
              Looks up a localized string similar to PrimaryKey is undefined..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExUndefinedTypeOfColumnX">
      <summary>
              Looks up a localized string similar to Type of column "{0}" is undefined..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.ExUndefinedTypeOfSequenceX">
      <summary>
              Looks up a localized string similar to Type of sequence "{0}" is undefined..
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.Length">
      <summary>
              Looks up a localized string similar to Length.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.NativeType">
      <summary>
              Looks up a localized string similar to Native type.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.NullableMark">
      <summary>
              Looks up a localized string similar to ?.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.Precision">
      <summary>
              Looks up a localized string similar to Precision.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.PropertyPairFormat">
      <summary>
              Looks up a localized string similar to {0}: {1}.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.Scale">
      <summary>
              Looks up a localized string similar to Scale.
            </summary>
    </member>
    <member name="P:Xtensive.Storage.Indexing.Model.Resources.Strings.Type">
      <summary>
              Looks up a localized string similar to Type.
            </summary>
    </member>
  </members>
</doc>