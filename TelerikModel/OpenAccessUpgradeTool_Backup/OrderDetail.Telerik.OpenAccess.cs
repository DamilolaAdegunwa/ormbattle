

using System;
using System.Collections.Generic;

namespace OrmBattle.TelerikModel.Northwind
{
  // Generated by Telerik OpenAccess
  // Used template: c:\program files\telerik\openaccess orm\sdk\IDEIntegrations\templates\PCClassGeneration\cs\templates\classgen\class\partialdesignerdefault.vm
  [Telerik.OpenAccess.Persistent(Identity = typeof(TelerikModel.Northwind.OrderDetail.ID))]
  public partial class OrderDetail
  {
    private int orderId; // pk 

    private int productId; // pk 

    private float discount;

    private short quantity;

    private Decimal unitPrice;

    private Order order; // inverse Order.orderDetails

    private Product product;


    #region Object ID class
    // Application identity objectid-class.
    // Used template: c:\program files\telerik\openaccess orm\sdk\IDEIntegrations\templates\PCClassGeneration\cs\templates\classgen\objectid\default.vm
    public class ID : Telerik.OpenAccess.IObjectId
    {
      public int orderId; //pk

      public int productId; //pk


      public ID()
      {
      }

      public ID(string s)
      {
        int i, p = 0;
        i = s.IndexOf('-', p);
        orderId = System.Int32.Parse(s.Substring(p, i - p));
        p = i + 1;
        i = s.IndexOf('-', p);
        productId = System.Int32.Parse(s.Substring(p));

      }

      public override bool Equals(object o)
      {
        if (this == o) return true;
        if (!(o is OrderDetail.ID)) return false;

        OrderDetail.ID id = (OrderDetail.ID)o;

        if (this.orderId != id.orderId) return false;

        if (this.productId != id.productId) return false;

        return true;
      }

      public override int GetHashCode()
      {
        int result = 0;
        result = 29 * result + orderId.GetHashCode();
        result = 29 * result + productId.GetHashCode();

        return result;
      }

      public override string ToString()
      {
        System.Text.StringBuilder buffer = new System.Text.StringBuilder();

        buffer.Append(orderId).Append('-');

        buffer.Append(productId);

        return buffer.ToString();
      }
    }

    #endregion //Object ID class
  }
}

#region main class file contents
/*


using System;
using System.Collections.Generic;

namespace OrmBattle.TelerikModel.Northwind 
{
    //Generated by Telerik OpenAccess
    public partial class OrderDetail 
    {
        //The 'no-args' constructor required by OpenAccess. 
        public OrderDetail() 
        {
        }
    
        [Telerik.OpenAccess.FieldAlias("orderId")]
        public int OrderId
        {
            get { return orderId; }
            set { this.orderId = value; }
        }
 
        [Telerik.OpenAccess.FieldAlias("productId")]
        public int ProductId
        {
            get { return productId; }
            set { this.productId = value; }
        }
 
        [Telerik.OpenAccess.FieldAlias("discount")]
        public float Discount
        {
            get { return discount; }
            set { this.discount = value; }
        }
 
        [Telerik.OpenAccess.FieldAlias("quantity")]
        public short Quantity
        {
            get { return quantity; }
            set { this.quantity = value; }
        }
 
        [Telerik.OpenAccess.FieldAlias("unitPrice")]
        public Decimal UnitPrice
        {
            get { return unitPrice; }
            set { this.unitPrice = value; }
        }
 
        [Telerik.OpenAccess.FieldAlias("order")]
        public Order Order
        {
            get { return order; }
            set { this.order = value; }
        }
 
        [Telerik.OpenAccess.FieldAlias("product")]
        public Product Product
        {
            get { return product; }
            set { this.product = value; }
        }
 

    }
}
*/
#endregion //main class file contents
