Performance tests (50 items):
  Testing: DataObjects.Net (DO)
  Testing: ADO.NET Entity Framework (EF)
  Testing: NHibernate (NH)

Performance tests (50 items) scorecard:
                                        DO        EF        NH      Unit
CRUD Performance:               
  Fetch                               7929       706      6621      op/s
  Single Operation:             
    Create Instance                   6714      4113      3351      op/s
    Update Instance                   5999      3725      2799      op/s
    Remove Instance                   6437      4310      3032      op/s
    CUD Average                       6369      4034      3044      op/s
  Multiple Operations:          
    Create Instance                  20750      8313     15991      op/s
    Update Instance                  22961      7201     13331      op/s
    Remove Instance                  22621      9320     14188      op/s
    CUD Average                      22066      8186     14420      op/s
Data Access Performance:        
  Query:                        
    LINQ Query                        1483       464      1105 queries/s
    Compiled LINQ Query               5874      2660       n/a queries/s
    Native Query                      5667      6916      4449 queries/s
  Paging (LINQ only):           
    Get Small Page   (10 items)       3891      1407       836   pages/s
    Get Average Page (20 items)       2531       672       603   pages/s
    Get Large Page   (50 items)        n/a       n/a       n/a       n/a
    Get Huge Page    (100 items)       n/a       n/a       n/a       n/a
  Materialization:              
    LINQ Materialize                 71901     25527     22112 objects/s
    Native Materialize               81208     89349     33656 objects/s

Units:
  op/s:      operations per second, more is better;
  queries/s: queries per second, more is better;
  pages/s:   pages per second, more is better;
  objects/s: # of materialized objects per second, more is better.


Performance tests (100 items):
  Testing: DataObjects.Net (DO)
  Testing: ADO.NET Entity Framework (EF)
  Testing: NHibernate (NH)

Performance tests (100 items) scorecard:
                                        DO        EF        NH      Unit
CRUD Performance:               
  Fetch                               8330      1290      7047      op/s
  Single Operation:             
    Create Instance                   7725      4896      3818      op/s
    Update Instance                   7330      4348      2814      op/s
    Remove Instance                   7752      5044      3245      op/s
    CUD Average                       7597      4743      3241      op/s
  Multiple Operations:          
    Create Instance                  23996      8834     18124      op/s
    Update Instance                  27205      7629     15046      op/s
    Remove Instance                  29587     10042     16153      op/s
    CUD Average                      26730      8724     16344      op/s
Data Access Performance:        
  Query:                        
    LINQ Query                        1553       482      1170 queries/s
    Compiled LINQ Query               6212      3753       n/a queries/s
    Native Query                      6787      8032      5053 queries/s
  Paging (LINQ only):           
    Get Small Page   (10 items)       4297      2241       893   pages/s
    Get Average Page (20 items)       3176      1354       718   pages/s
    Get Large Page   (50 items)       1853       644       314   pages/s
    Get Huge Page    (100 items)       n/a       n/a       n/a       n/a
  Materialization:              
    LINQ Materialize                 99930     48683     29118 objects/s
    Native Materialize              109649    163639     42075 objects/s

Units:
  op/s:      operations per second, more is better;
  queries/s: queries per second, more is better;
  pages/s:   pages per second, more is better;
  objects/s: # of materialized objects per second, more is better.


Performance tests (500 items):
  Testing: DataObjects.Net (DO)
  Testing: ADO.NET Entity Framework (EF)
  Testing: NHibernate (NH)

Performance tests (500 items) scorecard:
                                        DO        EF        NH      Unit
CRUD Performance:               
  Fetch                               8898      3878      7509      op/s
  Single Operation:             
    Create Instance                   7355      4652      3734      op/s
    Update Instance                   9475      5048      1398      op/s
    Remove Instance                  10095      6072      2226      op/s
    CUD Average                       8808      5192      2094      op/s
  Multiple Operations:          
    Create Instance                  20041      6913     14526      op/s
    Update Instance                  33502      7097     16826      op/s
    Remove Instance                  41555      9263     18204      op/s
    CUD Average                      28898      7623     16374      op/s
Data Access Performance:        
  Query:                        
    LINQ Query                        1503       462      1164 queries/s
    Compiled LINQ Query               6383      5703       n/a queries/s
    Native Query                      7450      9561      5588 queries/s
  Paging (LINQ only):           
    Get Small Page   (10 items)       5043      4042       959   pages/s
    Get Average Page (20 items)       4109      3195       799   pages/s
    Get Large Page   (50 items)       2762      1894       543   pages/s
    Get Huge Page    (100 items)      1835      1139       355   pages/s
  Materialization:              
    LINQ Materialize                236306    175685     39089 objects/s
    Native Materialize              268254    385921     52171 objects/s

Units:
  op/s:      operations per second, more is better;
  queries/s: queries per second, more is better;
  pages/s:   pages per second, more is better;
  objects/s: # of materialized objects per second, more is better.


Performance tests (1000 items):
  Testing: DataObjects.Net (DO)
  Testing: ADO.NET Entity Framework (EF)
  Testing: NHibernate (NH)

Performance tests (1000 items) scorecard:
                                        DO        EF        NH      Unit
CRUD Performance:               
  Fetch                               8993      5221      7514      op/s
  Single Operation:             
    Create Instance                   9570      4784      3831      op/s
    Update Instance                   9953      4732       898      op/s
    Remove Instance                  10621      6162      1488      op/s
    CUD Average                      10029      5148      1465      op/s
  Multiple Operations:          
    Create Instance                  17317      6732     12737      op/s
    Update Instance                  34813      5495     17460      op/s
    Remove Instance                  39700     10104     18716      op/s
    CUD Average                      26867      6984     15854      op/s
Data Access Performance:        
  Query:                        
    LINQ Query                        1573       468      1199 queries/s
    Compiled LINQ Query               7274      6132       n/a queries/s
    Native Query                      9231      9781      5563 queries/s
  Paging (LINQ only):           
    Get Small Page   (10 items)       5050      4454       933   pages/s
    Get Average Page (20 items)       4096      3828       749   pages/s
    Get Large Page   (50 items)       2811      2566       560   pages/s
    Get Huge Page    (100 items)      1820      1621       363   pages/s
  Materialization:              
    LINQ Materialize                258357    236428     40688 objects/s
    Native Materialize              321636    452284     54270 objects/s

Units:
  op/s:      operations per second, more is better;
  queries/s: queries per second, more is better;
  pages/s:   pages per second, more is better;
  objects/s: # of materialized objects per second, more is better.


Performance tests (5000 items):
  Testing: DataObjects.Net (DO)
  Testing: ADO.NET Entity Framework (EF)
  Testing: NHibernate (NH)

Performance tests (5000 items) scorecard:
                                        DO        EF        NH      Unit
CRUD Performance:               
  Fetch                               8814      7016      7362      op/s
  Single Operation:             
    Create Instance                   9505      4756      3833      op/s
    Update Instance                   9948      5042       216      op/s
    Remove Instance                   4664      6206       413      op/s
    CUD Average                       7140      5265       410      op/s
  Multiple Operations:          
    Create Instance                  21359      5751     18479      op/s
    Update Instance                  31871      6050     16949      op/s
    Remove Instance                  41518      8550     18365      op/s
    CUD Average                      29330      6577     17903      op/s
Data Access Performance:        
  Query:                        
    LINQ Query                        1525       484      1209 queries/s
    Compiled LINQ Query               7132      6396       n/a queries/s
    Native Query                      9213      9695      5576 queries/s
  Paging (LINQ only):           
    Get Small Page   (10 items)       4967      4779       935   pages/s
    Get Average Page (20 items)       3897      4533       786   pages/s
    Get Large Page   (50 items)       3165      3500       552   pages/s
    Get Huge Page    (100 items)      2171      2532       359   pages/s
  Materialization:              
    LINQ Materialize                363834    468239     40478 objects/s
    Native Materialize              434378    623775     51907 objects/s

Units:
  op/s:      operations per second, more is better;
  queries/s: queries per second, more is better;
  pages/s:   pages per second, more is better;
  objects/s: # of materialized objects per second, more is better.


Performance tests (10000 items):
  Testing: DataObjects.Net (DO)
  Testing: ADO.NET Entity Framework (EF)
  Testing: NHibernate (NH)

Performance tests (10000 items) scorecard:
                                        DO        EF        NH      Unit
CRUD Performance:               
  Fetch                               8837      7355      7409      op/s
  Single Operation:             
    Create Instance                   9668      4894      4340      op/s
    Update Instance                  10238      5060       110      op/s
    Remove Instance                  11104      6219       216      op/s
    CUD Average                      10303      5330       215      op/s
  Multiple Operations:          
    Create Instance                  22614      5738     18847      op/s
    Update Instance                  32176      5893     16791      op/s
    Remove Instance                  40252      8427     18282      op/s
    CUD Average                      29957      6484     17930      op/s
Data Access Performance:        
  Query:                        
    LINQ Query                        1517       487      1209 queries/s
    Compiled LINQ Query               7255      6465       n/a queries/s
    Native Query                      9383      9916      5555 queries/s
  Paging (LINQ only):           
    Get Small Page   (10 items)       4909      4961       934   pages/s
    Get Average Page (20 items)       4156      4329       787   pages/s
    Get Large Page   (50 items)       2752      3094       531   pages/s
    Get Huge Page    (100 items)      1791      2275       347   pages/s
  Materialization:              
    LINQ Materialize                290591    517303     39040 objects/s
    Native Materialize              306439    647060     53207 objects/s

Units:
  op/s:      operations per second, more is better;
  queries/s: queries per second, more is better;
  pages/s:   pages per second, more is better;
  objects/s: # of materialized objects per second, more is better.


Performance tests (30000 items):
  Testing: DataObjects.Net (DO)
  Testing: ADO.NET Entity Framework (EF)
  Testing: NHibernate (NH)

Performance tests (30000 items) scorecard:
                                        DO        EF        NH      Unit
CRUD Performance:               
  Fetch                               8838      7679      7370      op/s
  Single Operation:             
    Create Instance                   9768      4818      4330      op/s
    Update Instance                  10121      5102        36      op/s
    Remove Instance                  10731      6179        73      op/s
    CUD Average                      10191      5306        71      op/s
  Multiple Operations:          
    Create Instance                  25456      6614     21107      op/s
    Update Instance                  31506      5751     16662      op/s
    Remove Instance                  39077      8415     18018      op/s
    CUD Average                      31051      6758     18416      op/s
Data Access Performance:        
  Query:                        
    LINQ Query                        1487       486      1211 queries/s
    Compiled LINQ Query               7320      6553       n/a queries/s
    Native Query                      9465      9877      5609 queries/s
  Paging (LINQ only):           
    Get Small Page   (10 items)       4912      4911       928   pages/s
    Get Average Page (20 items)       4091      4380       772   pages/s
    Get Large Page   (50 items)       2614      3076       521   pages/s
    Get Huge Page    (100 items)      1818      2574       339   pages/s
  Materialization:              
    LINQ Materialize                265919    495755     37718 objects/s
    Native Materialize              297800    570012     49914 objects/s

Units:
  op/s:      operations per second, more is better;
  queries/s: queries per second, more is better;
  pages/s:   pages per second, more is better;
  objects/s: # of materialized objects per second, more is better.


LINQ tests:
  Testing: DataObjects.Net (DO)
  Testing: ADO.NET Entity Framework (EF)
  Testing: NHibernate (NH)

LINQ tests scorecard:
                                        DO        EF        NH   Maximum      Unit
LINQ Implementation:            
  Aggregates                             0         0         3         5       f/a
  All/Any/Contains                       2         3       4/2         6       f/a
  Complex                                0         1         6         6       f/a
  Element operations                     2         4         6         9       f/a
  Filtering                              0       4/2       6/1        12       f/a
  Grouping                               0         1      10/2        10       f/a
  Join                                   0         1         4         4       f/a
  Ordering                               0       3/2         6         8       f/a
  Projections                            2         2       6/1        13       f/a
  References                             0         0         3         4       f/a
  Set operations                         0         0       6/2         9       f/a
  Standard functions                     0         9        16        21       f/a
  Take/Skip                              0         1       2/1         5       f/a
  Type casts                             0         1         4         5       f/a
Total:                          
  Performed                            117       117       117       117         #
  Passed                               111        87        35       117         #
  Failed                                 6        30        82       117         #
    Properly                             6        26        73       117         #
    Asserted                             0         4         9       117         #
  Score                               94,9      74,4      29,9     100,0         %

Units:
  f/a: total count of failed tests [ / count of tests failed with assertion ],
       less is better (0 is ideal);
  #:   count;
  %:   percentage (% of passed tests), more is better.


